{"version":3,"sources":["redux/reducers/errors.reducer.js","redux/reducers/user.reducer.js","redux/reducers/ingredients.reducer.js","redux/reducers/recipes.reducer.js","redux/reducers/recipe-details.reducer.js","redux/reducers/all-ingredients.js","redux/reducers/categories.reducer.js","redux/reducers/favorite-recipes.reducer.js","redux/reducers/_root.reducer.js","redux/sagas/AuthentSagas/login.saga.js","redux/sagas/AuthentSagas/registration.saga.js","redux/sagas/AuthentSagas/user.saga.js","redux/sagas/IngredientsSagas/userIngredients.saga.js","redux/sagas/RecipesSagas/recipes.saga.js","redux/sagas/IngredientsSagas/allIngredients.saga.js","redux/sagas/IngredientsSagas/addIngredient.saga.js","redux/sagas/IngredientsSagas/deleteIngredient.saga.js","redux/sagas/IngredientsSagas/ingredient-categories.saga.js","redux/sagas/_root.saga.js","components/Nav/Nav.jsx","components/LoginForm/LoginForm.jsx","components/LoginPage/LoginPage.jsx","components/ProtectedRoute/ProtectedRoute.jsx","components/AboutPage/AboutPage.jsx","components/UserPage/UserPage.jsx","components/IngredientsPage/IngredientForm.jsx","components/IngredientsPage/IngredientRow.jsx","components/IngredientsPage/IngredientsPage.jsx","components/RecipesPage/RecipesPage.jsx","components/RegisterForm/RegisterForm.jsx","components/LandingPage/LandingPage.jsx","components/RegisterPage/RegisterPage.jsx","components/RecipeDetails/RecipeDetails.jsx","components/FavoriteRecipes/FavoriteRecipes.jsx","components/App/App.jsx","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","userReducer","payload","ingredients","recipes","details","allIngredients","categories","favoriteRecipes","rootReducer","errors","user","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","console","log","response","status","takeLatest","registerUser","registrationSaga","fetchUser","userSaga","get","data","ingredientListSaga","updateIngredientSaga","ingredientSaga","id","update","takeEvery","recipeListSaga","GetFavoriteRecipes","addFavorite","RecipeSaga","favorite","allIngredientsSaga","ingredientSelectSaga","addIngredient","addIngredientSaga","deleteIngredient","deleteIngredientSaga","delete","fetchCategory","categorySaga","rootSaga","all","Nav","useSelector","store","dispatch","useDispatch","history","useHistory","loginLinkData","path","text","drawerWidth","classes","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","useStyles","useTheme","useState","open","setOpen","handleDrawerClose","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","push","Typography","Drawer","variant","anchor","paper","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","Button","Link","herf","LoginForm","username","setUsername","password","setPassword","onSubmit","event","preventDefault","role","htmlFor","TextField","label","name","required","value","onChange","target","LoginPage","ProtectedRoute","props","authRedirect","otherProps","ComponentToProtect","component","children","ComponentToShow","exact","from","to","AboutPage","UserPage","IngredientForm","newIngredient","setNewIngredient","newIngredientCount","setNewIngredientCount","Box","Select","e","style","defaultValue","InputLabel","map","eachIngredient","i","MenuItem","height","ingredient_id","count","alert","margin","IngredientRow","ingredient","users","isEditing","setIsEditing","setCount","IngredientCategory","category_id","TableRow","TableCell","align","countObj","user_id","handleDelete","IngredientsPage","useEffect","Table","TableHead","TableBody","RecipesPage","recipe","Card","handleClick","src","poster","maxWidth","title","textAlign","RegisterForm","LandingPage","heading","RegisterPage","MovieDetails","marginTop","ingredients_list","cooking_directions","FavoriteRecipeList","favorites","App","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6f5a8b7.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return \"Oops! The username and password didn't match. Try again!\";\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return \"Oops! That didn't work. The username might already be taken. Try again!\";\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const ingredients = (state = [], action ) => {\n    switch (action.type) {\n        case 'SET_INGREDIENTS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\nexport default ingredients;","const recipes = (state = [], action ) => {\n    switch (action.type) {\n        case 'SET_RECIPES':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default recipes;","const details = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_DETAILS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\nexport default details;","const allIngredients = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_ALL_INGREDIENTS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\nexport default allIngredients;","const categories = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_CATEGORIES':\n            return action.payload;\n        default:\n            return state;\n    }\n}\nexport default categories;","const favoriteRecipes = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_FAVORITES':\n            return action.payload;\n        default:\n            return state;\n    }\n}\nexport default favoriteRecipes;","import { combineReducers } from 'redux';\nimport errors from './errors.reducer';\nimport user from './user.reducer';\nimport ingredients from './ingredients.reducer'\nimport recipes from './recipes.reducer'\nimport details from './recipe-details.reducer'\nimport allIngredients from './all-ingredients'\nimport categories from './categories.reducer'\nimport favoriteRecipes from './favorite-recipes.reducer'\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  user, // will have an id and username if someone is logged in\n  ingredients,\n  recipes,\n  details,\n  allIngredients,\n  categories,\n  favoriteRecipes,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n\n    // after the user has logged in\n    // get the user information from the server\n    yield put({ type: 'FETCH_USER' });\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n\n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({ type: 'SET_TO_LOGIN_MODE' });\n  } catch (error) {\n    console.log('Error with user registration:', error);\n    yield put({ type: 'REGISTRATION_FAILED' });\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios'\nimport { takeEvery, put } from 'redux-saga/effects';\n\nfunction* ingredientListSaga() {\n    try {\n        const ingredients = yield axios.get('/api/userIngredients');\n        yield put ({type: 'SET_INGREDIENTS' , payload: ingredients.data});\n    } catch {\n        console.log('get ingredients error');\n    }\n}\n\nfunction* updateIngredientSaga(action) {\n    try {\n        const update = yield axios.put(`/api/userIngredients/${action.payload.id}`, action.payload)\n        yield put ({ type: 'FETCH_INGREDIENTS', payload:update.data})\n    } catch(error) {\n        console.log('error updating ingredient!', error);\n    }\n}\n\nfunction* ingredientSaga() {\n    yield takeEvery('FETCH_INGREDIENTS', ingredientListSaga)\n    yield takeEvery('UPDATE_INGREDIENT', updateIngredientSaga)\n}\nexport default ingredientSaga;","import axios from 'axios'\nimport { takeEvery , put } from 'redux-saga/effects';\nfunction* recipeListSaga() {\n    try {\n        const recipes = yield axios.get('/api/recipes');\n        console.log(recipes.data)\n        yield put ({type: 'SET_RECIPES' , payload:recipes.data});\n    } catch {\n        console.log('get recipes error');\n    }\n}\n\nfunction* GetFavoriteRecipes() {\n    try {\n        const favorite = yield axios.get('/api/favorites');\n        yield put ({type:'SET_FAVORITES', payload:favorite.data})\n    } catch (err) {\n        console.log('get favorites error', err)\n    }\n}\n\nfunction* addFavorite(action) {\n    try {\n        console.log(action.payload)\n        yield axios.post(`/api/favorites/${action.payload}`);\n        yield put({ type: 'FETCH_FAVORITES' })\n    } catch (error) {\n        console.log('error adding new favorite!', error);\n    }\n}\n\nfunction* RecipeSaga() {\n    yield takeEvery('FETCH_RECIPES',recipeListSaga)\n    yield takeEvery('FETCH_FAVORITES',GetFavoriteRecipes)\n    yield takeEvery('ADD_FAVORITE',addFavorite)\n}\nexport default RecipeSaga;","import axios from 'axios'\nimport { takeEvery, put } from 'redux-saga/effects';\n\nfunction* allIngredientsSaga() {\n    try {\n        const allIngredients = yield axios.get('/api/ingredients');\n        yield put ({type: 'SET_ALL_INGREDIENTS' , payload: allIngredients.data});\n    } catch {\n        console.log('get ingredients error');\n    }\n}\n\nfunction* ingredientSelectSaga() {\n    yield takeEvery('FETCH_ALL_INGREDIENTS', allIngredientsSaga)\n}\nexport default ingredientSelectSaga;","import { takeEvery, put } from \"redux-saga/effects\";\nimport axios from 'axios'\n\nfunction* addIngredient(action) {\n    try {\n        yield axios.post('/api/userIngredients', action.payload);\n        yield put({ type: 'FETCH_INGREDIENTS' })\n    } catch (error) {\n        console.log('error adding new ingredient!', error);\n    }\n}\n\nfunction* addIngredientSaga() {\n    yield takeEvery('ADD_INGREDIENT', addIngredient)\n}\nexport default addIngredientSaga;","import { takeEvery, put } from \"redux-saga/effects\";\nimport axios from 'axios'\n\nfunction* deleteIngredient(action) {\n    try {\n        yield axios.delete(`/api/userIngredients/${action.payload}`);\n        yield put({ type: 'FETCH_INGREDIENTS' })\n    } catch (error) {\n        console.log('error deleting ingredient!', error);\n    }\n}\n\nfunction* deleteIngredientSaga() {\n    yield takeEvery('DELETE_INGREDIENT', deleteIngredient)\n}\nexport default deleteIngredientSaga;","import { takeEvery, put } from \"redux-saga/effects\";\nimport axios from 'axios'\n\nfunction* fetchCategory(action) {\n    try {\n        const categories = yield axios.get(`/api/categories/`);\n        yield put({ type: 'SET_CATEGORIES', payload: categories.data })\n    } catch (error) {\n        console.log('error getting categories!',error);\n    }\n}\nfunction* categorySaga() {\n    yield takeEvery('FETCH_CATEGORIES',fetchCategory)\n}\nexport default categorySaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './AuthentSagas/login.saga';\nimport registrationSaga from './AuthentSagas/registration.saga';\nimport userSaga from './AuthentSagas/user.saga';\nimport ingredientSaga from './IngredientsSagas/userIngredients.saga'\nimport RecipeSaga from './RecipesSagas/recipes.saga'\nimport ingredientSelectSaga from './IngredientsSagas/allIngredients.saga'\nimport addIngredientSaga from './IngredientsSagas/addIngredient.saga';\nimport deleteIngredientSaga from './IngredientsSagas/deleteIngredient.saga'\nimport categorySaga from './IngredientsSagas/ingredient-categories.saga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(), // login saga is now registered\n    registrationSaga(),\n    userSaga(),\n    ingredientSaga(),\n    RecipeSaga(),\n    ingredientSelectSaga(),\n    addIngredientSaga(),\n    deleteIngredientSaga(),\n    categorySaga(),\n  ]);\n}\n","// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import LogOutButton from '../LogOutButton/LogOutButton';\n// import './Nav.css';\n// import { useSelector } from 'react-redux';\n\n// function Nav() {\n//   const user = useSelector((store) => store.user);\n\n//   let loginLinkData = {\n//     path: '/login',\n//     text: 'Login / Register',\n//   };\n\n//   if (user.id != null) {\n//     loginLinkData.path = '/user';\n//     loginLinkData.text = 'Home';\n//   }\n\n//   return (\n//     <div className=\"nav\">\n//       <Link to=\"/home\">\n//         <h2 className=\"nav-title\">Prime Solo Project</h2>\n//       </Link>\n//       <div>\n//         <Link className=\"navLink\" to={loginLinkData.path}>\n//           {loginLinkData.text}\n//         </Link>\n//         <Link className=\"navLink\" to=\"/about\">\n//           About\n//         </Link>\n//         {user.id && (\n//           <>\n//             <Link className=\"navLink\" to=\"/userIngredients\">\n//               Ingredients\n//             </Link>\n//             <Link className='navLink' to=\"recipes\">\n//               Cookable Recipes\n//             </Link>\n//             <LogOutButton className=\"navLink\" />\n//           </>\n//         )}\n\n//       </div>\n//     </div>\n//   );\n// }\nimport { React, useState } from 'react'\nimport clsx from 'clsx';\nimport { useHistory } from 'react-router-dom';\nimport './Nav.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Link from '@material-ui/core/Link';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport KitchenIcon from '@material-ui/icons/Kitchen';\nimport HelpIcon from '@material-ui/icons/Help';\nimport List from '@material-ui/core/List';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\n\nfunction Nav() {\n  const user = useSelector((store) => store.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  function hanldeRecipeClick() {\n    history.push('/recipes')\n    handleDrawerClose();\n  }\n  function handleIngredientClick() {\n    history.push('/userIngredients')\n    handleDrawerClose();\n  }\n  function handleFavoriteClick() {\n    history.push('/favorites')\n    handleDrawerClose();\n  }\n  function handleAboutClick() {\n    history.push('/about')\n    handleDrawerClose();\n  }\n  function handleClickHome() {\n    history.push('/home')\n  }\n  function handleLogout() {\n    history.push('/user')\n    dispatch({ type: 'LOGOUT'});\n    handleDrawerClose();\n  }\n  let loginLinkData = {\n    path: '/login',\n    text: 'Login / Register',\n  };\n\n  if (user.id != null) {\n    loginLinkData.path = '/user';\n    loginLinkData.text = 'Home';\n  }\n  const drawerWidth = 240;\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }));\n\n  const classes = useStyles();\n\n  const theme = useTheme();\n\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n          <IconButton\n            edge=\"start\"\n            color='inherit'\n            onClick={handleClickHome}\n          >\n            <HomeIcon/>\n          </IconButton>\n            <Typography>Home Cook Helper</Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button onClick={hanldeRecipeClick}  >\n            <ListItemIcon ><FastfoodIcon /><ListItemText primary='Recipes' /></ListItemIcon>\n          </ListItem>\n          <ListItem button onClick={handleIngredientClick}>\n            <ListItemIcon><KitchenIcon /><ListItemText primary='Ingredients' /></ListItemIcon>\n          </ListItem>\n          <ListItem button onClick={handleFavoriteClick}  >\n            <ListItemIcon><FavoriteIcon/><ListItemText primary='Favorites' /></ListItemIcon>\n          </ListItem>\n          <ListItem button onClick={handleAboutClick} >\n            <ListItemIcon><HelpIcon /><ListItemText primary='About' /></ListItemIcon>\n          </ListItem>\n          <ListItem button onClick={handleLogout}>\n            <ListItemIcon><ExitToAppIcon/><ListItemText primary='Login/Logout'/></ListItemIcon>\n          </ListItem>\n        </List>\n      </Drawer>\n      <Button>\n        <Link herf={loginLinkData.path}>\n          {loginLinkData.text}\n        </Link>\n      </Button>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {useSelector} from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nfunction LoginForm() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const errors = useSelector(store => store.errors);\n  const dispatch = useDispatch();\n\n  const login = (event) => {\n    event.preventDefault();\n\n    if (username && password) {\n      dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: username,\n          password: password,\n        },\n      });\n    } else {\n      dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  }; // end login\n\n  return (\n    <form className=\"formPanel\" onSubmit={login}>\n      <h2>Login</h2>\n      {errors.loginMessage && (\n        <h3 className=\"alert\" role=\"alert\">\n          {errors.loginMessage}\n        </h3>\n      )}\n      <div>\n        <label htmlFor=\"username\">\n          <TextField\n            variant=\"outlined\"\n            color=\"primary\"\n            label=\"Username\"\n            type=\"text\"\n            name=\"username\"\n            required\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n        </label>\n      </div>\n      <div>\n        <label htmlFor=\"password\">\n          <TextField\n            variant=\"outlined\"\n            color=\"primary\"\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </label>\n      </div>\n      <div>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Log In</Button>\n      </div>\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport LoginForm from '../LoginForm/LoginForm';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nfunction LoginPage() {\n  const history = useHistory();\n\n  return (\n    <div>\n      <LoginForm />\n\n      <center>\n        <Button\n          type=\"button\"\n          className=\"btn btn_asLink\"\n          onClick={() => {\n            history.push('/registration');\n          }}\n        >\n          Register\n        </Button>\n      </center>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport LoginPage from '../LoginPage/LoginPage';\nimport {useSelector} from 'react-redux';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nfunction ProtectedRoute(props) {\n  const user = useSelector((store) => store.user);\n\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // redirect path to be used if the user is authorized\n    authRedirect,\n    ...otherProps\n  } = props;\n\n  // Component may be passed in as as prop, or as a child\n  const ComponentToProtect = props.component || (() => props.children);\n\n  let ComponentToShow;\n\n  if (user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  }\n\n\n  // redirect a logged in user if an authRedirect prop has been provided\n  if (user.id && authRedirect != null) {\n    return <Redirect exact from={otherProps.path} to={authRedirect} />;\n  } else if (!user.id && authRedirect != null) {\n    ComponentToShow = ComponentToProtect;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n    <Route\n      // all props like 'exact' and 'path' that were passed in\n      // are now passed along to the 'Route' Component\n      {...otherProps}\n    >\n      <ComponentToShow />\n    </Route>\n\n  );\n}\n\nexport default ProtectedRoute;\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state,\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is'\n\nfunction AboutPage() {\n  return (\n    <div className=\"container\">\n      <div>\n        <p>\n          Home Cooker Helper is a great application that will help you decide what you are going to cook for you, your kids, your husband/wife, ANYONE!\n          This application streamlines the ease of accessing recipes that you can cook with the ingredients in your pantry/fridge.\n          Simply Add the ingredients that you have in you pantry(from a selection of ingredients) and click over to the recipes page to see a total list of the recipes you can cook!\n          With each recipe you can click on it and you will be transfered to a new page where there will be instructions on cooking the dish and an ingredients list of what you will exactly need!\n          Enjoy finding tonight's meal faster with Home Cooker Helper.\n            </p>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutPage;\n","import React from 'react';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport {useSelector} from 'react-redux';\n\nfunction UserPage() {\n  // this component doesn't do much to start, just renders some user reducer info to the DOM\n  const user = useSelector((store) => store.user);\n  return (\n    <div className=\"container\">\n      <h2>Welcome, {user.username}!</h2>\n      <p>Please navigate to the Ingredients tab to begin your cooking adventures!</p>\n      {/* <LogOutButton className=\"btn\" /> */}\n    </div>\n  );\n}\n\n// this allows us to use <App /> in index.js\nexport default UserPage;\n","import { React, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport SendIcon from '@material-ui/icons/Send';\nimport Box from '@material-ui/core/Box';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport '../IngredientsPage/Ingredients.css'\n\nfunction IngredientForm() {\n\n    const dispatch = useDispatch();\n\n    const allIngredients = useSelector(store => store.allIngredients);\n\n    const [newIngredient, setNewIngredient] = useState(0);\n\n    const [newIngredientCount, setNewIngredientCount] = useState('');\n\n    const handleSubmit = () => {\n        //add new ingredient\n        const newIngredientAdd = {\n            ingredient_id: newIngredient,\n            count: newIngredientCount,\n        }\n        if (!newIngredient) {\n            alert('Please Select An Ingredient To Add');\n            return;\n        } else if (!newIngredientCount) {\n            alert('Please Add Amount');\n            return;\n        } else {\n            dispatch({ type: 'ADD_INGREDIENT', payload: newIngredientAdd });\n            setNewIngredient('');\n            setNewIngredientCount('')\n        }\n    }\n    //{allIngredients.map((eachIngredient, i) => <option key={i} value={eachIngredient.id}>{eachIngredient.name}</option>)}\n\n    return (\n        <form className=\"ingredientForm\">\n            <Box display=\"flex\" justifyContent=\"center\">\n                <Select\n                    value={newIngredient}\n                    onChange={(e) => setNewIngredient(e.target.value)}\n                    variant=\"outlined\"\n                    style={{width:200,marginRight:5}}\n                    defaultValue={0}\n                >\n                    <InputLabel value={0}>Ingredient Name</InputLabel>\n                    {allIngredients.map((eachIngredient, i) => <MenuItem key={i} value={eachIngredient.id}>{eachIngredient.name}</MenuItem>)}\n                </Select>\n                <TextField style={{ width: 200, marginRight: 5, height: 50 }} id=\"countInput\" variant=\"outlined\" label=\"Count\" value={newIngredientCount} onChange={(e) => setNewIngredientCount(e.target.value)} />\n                <Button style={{ width: 100, height: 55 }} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Add<SendIcon style={{ margin: 10 }} /></Button>\n            </Box>\n        </form>\n    )\n}\nexport default IngredientForm;","import { React, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CreateIcon from '@material-ui/icons/Create';\nimport IconButton from '@material-ui/core/IconButton';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport '../IngredientsPage/Ingredients.css'\n\nfunction IngredientRow({ ingredient }) {\n\n    const users = useSelector(store => store.user);\n\n    const dispatch = useDispatch();\n\n    const [isEditing, setIsEditing] = useState(false);\n\n    const [count, setCount] = useState(ingredient.count);\n\n    let IngredientCategory = ingredient.category_id;\n\n    const categorySet = () => {\n        if (IngredientCategory === 1) {\n            IngredientCategory = \"Fruit\";\n        } else if (IngredientCategory === 2) {\n            IngredientCategory = \"Vegetable\";\n        } else if (IngredientCategory === 3) {\n            IngredientCategory = \"Grain\";\n        } else if (IngredientCategory === 4) {\n            IngredientCategory = \"Protien\";\n        } else if (IngredientCategory === 5) {\n            IngredientCategory = \"Dairy\";\n        } else if (IngredientCategory === 6) {\n            IngredientCategory = \"Spice\";\n        } else if (IngredientCategory === 7) {\n            IngredientCategory = \"Sauce\";\n        } else if (IngredientCategory === 8) {\n            IngredientCategory = \"Seasoning\";\n        } else if (IngredientCategory === 9) {\n            IngredientCategory = \"Additive\";\n        } else {\n            IngredientCategory = \"Soups\";\n        }\n        console.log(IngredientCategory)\n    }\n\n    categorySet(IngredientCategory);\n\n    const handleDelete = (id) => {\n        //delete ingredient\n        dispatch({ type: 'DELETE_INGREDIENT', payload: id });\n    }\n\n    const handleEdit = () => {\n        setIsEditing(true);\n    }\n\n    const editSubmit = () => {\n        setIsEditing(false);\n        const countObj = {\n            id: ingredient.id,\n            count: count,\n            user_id: users.id,\n        }\n        dispatch({ type: 'UPDATE_INGREDIENT', payload: countObj })\n    }\n    return (\n        <TableRow key={ingredient.id}>\n            <TableCell align=\"center\">{ingredient.name}</TableCell>\n            <TableCell align=\"center\">{IngredientCategory}</TableCell>\n            <TableCell align=\"center\">{ingredient.count}</TableCell>\n            {!isEditing ?\n                <TableCell align=\"center\"><IconButton className='ingredientButtonControls' variant=\"contained\" color=\"default\" onClick={handleEdit}><CreateIcon/></IconButton><IconButton className='ingredientButtonControls' variant=\"contained\" color=\"secondary\" onClick={() => handleDelete(ingredient.id)}><DeleteForeverIcon/></IconButton></TableCell> :\n                <TableCell align=\"center\"><TextField className=\"ingredientEditText\" variant=\"outlined\" label='Count' value={count} onChange={(e) => setCount(e.target.value)} /><IconButton className='ingredientSaveButton' variant=\"contained\" color=\"primary\" onClick={editSubmit}><SaveAltIcon/></IconButton></TableCell>\n            }\n        </TableRow>\n    )\n}\nexport default IngredientRow;","import { React, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport IngredientForm from './IngredientForm.jsx';\nimport IngredientRow from './IngredientRow.jsx'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport '../IngredientsPage/Ingredients.css'\n\n// This is one of our simplest components\n// It doesn't have local state\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is\n\nfunction IngredientsPage() {\n\n  const ingredients = useSelector(store => store.ingredients);\n\n  console.log(ingredients);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({ type: 'FETCH_INGREDIENTS' });\n    dispatch({ type: 'FETCH_ALL_INGREDIENTS' })\n    dispatch({ type: 'FETCH_CATEGORIES' })\n  }, [])\n\n  return (\n    <>\n      <IngredientForm />\n      <div className=\"Ingredientcontainer\">\n        <Table className='ingredientsTable'>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Category</TableCell>\n              <TableCell align=\"center\">Count</TableCell>\n              <TableCell/>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ingredients.map(ingredient => {\n              return (\n                <IngredientRow\n                  key={ingredient.id}\n                  ingredient={ingredient}\n                />\n              )\n            })}\n          </TableBody>\n        </Table>\n      </div>\n    </>\n  )\n\n}\n\nexport default IngredientsPage;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom'\nimport Card from '@material-ui/core/Card';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport '../RecipesPage/RecipePage.css'\n\nfunction RecipesPage() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const recipes = useSelector(store => store.recipes)\n\n    useEffect(() => {\n        dispatch({ type: 'FETCH_RECIPES' });\n    }, [])\n    const handleClick = (recipe) => {\n        dispatch({ type: 'SET_DETAILS', payload: recipe });\n        history.push('/details')\n    }\n    return (\n        <div className=\"recipeContainer\">\n            {recipes.map(recipe => {\n                return (\n                    <>\n                        <Card className='recipeCard' key={recipe.id} onClick={() => handleClick(recipe)}>\n                            <img style={{ width: 100, height: 100 }} src={recipe.poster}></img>\n                            <h5 style={{ maxWidth: 100 }}>{recipe.title}</h5>\n                        </Card>\n                        <IconButton style={{ textAlign: \"left\" }} onClick={() => dispatch({ type: 'ADD_FAVORITE', payload: recipe.id })}><FavoriteIcon /></IconButton>\n                    </>\n                )\n            })}\n        </div>\n    );\n}\n\nexport default RecipesPage;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nfunction RegisterForm() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const errors = useSelector((store) => store.errors);\n  const dispatch = useDispatch();\n\n  const registerUser = (event) => {\n    event.preventDefault();\n\n    dispatch({\n      type: 'REGISTER',\n      payload: {\n        username: username,\n        password: password,\n      },\n    });\n  }; // end registerUser\n\n  return (\n    <form className=\"formPanel\" onSubmit={registerUser}>\n      <h2>Register User</h2>\n      {errors.registrationMessage && (\n        <h3 className=\"alert\" role=\"alert\">\n          {errors.registrationMessage}\n        </h3>\n      )}\n      <div>\n        <label htmlFor=\"username\">\n          <TextField\n            variant=\"outlined\"\n            label=\"Username\"\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            required\n            onChange={(event) => setUsername(event.target.value)}\n          />\n        </label>\n      </div>\n      <div>\n        <label htmlFor=\"password\">\n          <TextField\n            variant=\"outlined\"\n            label=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            required\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </label>\n      </div>\n      <div>\n        <Button variant='contained' color='primary'type=\"submit\" >Register</Button>\n      </div>\n    </form>\n  );\n}\n\nexport default RegisterForm;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './LandingPage.css';\n\n// CUSTOM COMPONENTS\nimport RegisterForm from '../RegisterForm/RegisterForm';\n\nfunction LandingPage() {\n  const [heading, setHeading] = useState('Welcome');\n  const history = useHistory();\n\n  const onLogin = (event) => {\n    history.push('/login');\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>{heading}</h2>\n\n      <div className=\"grid\">\n        <div className=\"grid-col grid-col_8\">\n            <h1>Home Cooker Helper</h1>\n            <p>\n              Home Cooker Helper is a great application that will help you decide what you are going to cook for you, your kids, your husband/wife, ANYONE! \n              This application streamlines the ease of accessing recipes that you can cook with the ingredients in your pantry/fridge. \n              Simply Add the ingredients that you have in you pantry(from a selection of ingredients) and click over to the recipes page to see a total list of the recipes you can cook!\n              With each recipe you can click on it and you will be transfered to a new page where there will be instructions on cooking the dish and an ingredients list of what you will exactly need!\n              Enjoy finding tonight's meal faster with Home Cooker Helper.\n            </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from 'react-router-dom';\nimport RegisterForm from '../RegisterForm/RegisterForm';\n\nfunction RegisterPage() {\n  const history = useHistory();\n\n  return (\n    <div>\n      <RegisterForm />\n\n      <center>\n        <Button\n          type=\"button\"\n          className=\"btn btn_asLink\"\n          onClick={() => {\n            history.push('/login');\n          }}\n        >\n          Login\n        </Button>\n      </center>\n    </div>\n  );\n}\n\nexport default RegisterPage;\n","import { useSelector, useDispatch} from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport '../RecipeDetails/RecipeDetails.css'\n\nfunction MovieDetails() {\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n\n    const recipe = useSelector(store => store.details);\n\n    console.log(recipe);\n\n    const handleClick = () => {\n        history.push('/recipes')\n    }\n    return (\n        <div className=\"recipeDetails\" key={recipe.id} >\n            <img className=\"recipeDetailsImage\" style={{ width: 200, height: 200, marginTop: 45}} src={recipe.poster}></img>\n            <h3>{recipe.title}</h3>\n            <IconButton onClick={handleClick}><UndoIcon/>Return</IconButton>\n            <h2>Ingredients</h2>\n            <p>{recipe.ingredients_list}</p>\n            <h2>Cooking Instrucitons</h2>\n            <p>{recipe.cooking_directions}</p>\n        </div>\n    )\n}\n\nexport default MovieDetails; ","import Card from '@material-ui/core/Card';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport '../FavoriteRecipes/FavoriteRecipes.css'\n\nfunction FavoriteRecipeList() {\n    const dispatch = useDispatch();\n    const favorites = useSelector(store => store.favoriteRecipes);\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch({ type: 'FETCH_FAVORITES' });\n    }, [])\n\n    console.log(favorites);\n\n    const handleClick = (favorite) => {\n        dispatch({ type: 'SET_DETAILS', payload:favorite })\n        history.push('/details')\n    }\n\n    return (\n        <div className=\"favoritesContainer\">\n            {favorites.map(favorite => {\n                return (\n                    <Card className='recipeCard' key={favorite.id} onClick={() => handleClick(favorite)}>\n                        <img style={{ width: 100, height: 100 }} src={favorite.poster}></img>\n                        <h5 style={{ maxWidth: 100 }}>{favorite.title}</h5>\n                    </Card>\n                )\n            })}\n        </div>\n    )\n}\nexport default FavoriteRecipeList;","import React, { useEffect } from 'react';\nimport { useHistory, HashRouter as Router, Route, Redirect, Switch,} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Nav from '../Nav/Nav';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\nimport IngredientsPage from '../IngredientsPage/IngredientsPage';\nimport RecipePage from '../RecipesPage/RecipesPage'\nimport LandingPage from '../LandingPage/LandingPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\nimport RecipeDetails from '../RecipeDetails/RecipeDetails'\nimport FavoriteRecipeList from '../FavoriteRecipes/FavoriteRecipes'\n\n\nimport './App.css';\nimport favoriteRecipes from '../../redux/reducers/favorite-recipes.reducer';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({ type: 'FETCH_USER' });\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n          <Redirect exact from=\"/\" to=\"/home\" />\n\n          {/* Visiting localhost:3000/about will show the about page. */}\n          <Route\n            // shows AboutPage at all times (logged in or not)\n            exact\n            path=\"/about\"\n          >\n            <AboutPage />\n          </Route>\n\n          {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/user will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the LoginPage (component).\n            Even though it seems like they are different pages, the user is always on localhost:3000/user */}\n          <ProtectedRoute\n            // logged in shows UserPage else shows LoginPage\n            exact\n            path=\"/user\"\n          >\n            <UserPage />\n          </ProtectedRoute>\n\n          <ProtectedRoute\n            exact\n            path=\"/userIngredients\"\n          >\n            <IngredientsPage />\n          </ProtectedRoute>\n          <ProtectedRoute\n            // with authRedirect:\n            // - if logged in, redirects to \"/user\"\n            // - else shows RegisterPage at \"/registration\"\n            exact\n            path=\"/recipes\"\n          >\n            <RecipePage />\n          </ProtectedRoute>\n          <ProtectedRoute\n            exact\n            path=\"/details\"\n          >\n            <RecipeDetails />\n          </ProtectedRoute>\n          <ProtectedRoute\n            // with authRedirect:\n            // - if logged in, redirects to \"/user\"\n            // - else shows RegisterPage at \"/registration\"\n            exact\n            path=\"/favorites\"\n          >\n            <FavoriteRecipeList />\n          </ProtectedRoute>\n          \n\n          {/* When a value is supplied for the authRedirect prop the user will\n            be redirected to the path supplied when logged in, otherwise they will\n            be taken to the component and path supplied. */}\n          <ProtectedRoute\n            // with authRedirect:\n            // - if logged in, redirects to \"/user\"\n            // - else shows LoginPage at /login\n            exact\n            path=\"/login\"\n            authRedirect=\"/user\"\n          >\n            <LoginPage />\n          </ProtectedRoute>\n\n          <ProtectedRoute\n            // with authRedirect:\n            // - if logged in, redirects to \"/user\"\n            // - else shows RegisterPage at \"/registration\"\n            exact\n            path=\"/registration\"\n            authRedirect=\"/user\"\n          >\n            <RegisterPage />\n          </ProtectedRoute>\n\n          <ProtectedRoute\n            // with authRedirect:\n            // - if logged in, redirects to \"/user\"\n            // - else shows LandingPage at \"/home\"\n            exact\n            path=\"/home\"\n            authRedirect=\"/user\"\n          >\n            <LandingPage />\n          </ProtectedRoute>\n\n          {/* If none of the other routes matched, we will show a 404. */}\n          <Route>\n            <h1>404</h1>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers/_root.reducer'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas/_root.saga'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}